{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Form","state","name","number","onInputChanged","e","currentTarget","value","setState","onSubmitClick","preventDefault","props","onSubmit","this","className","type","pattern","title","required","onChange","Component","ContactList","filtered","onDeleteContact","map","id","onClick","Filter","App","contacts","filter","addContact","text","onCheckContactAlready","alert","contact","generate","deleteContact","contactId","cont","onFilterChanged","some","onFilterContacts","normalizeFilter","toLowerCase","includes","ContactForm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.92039855.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onInputChanged = e => {\r\n    const { value, name } = e.currentTarget;\r\n    return this.setState({ [name]: value });\r\n  };\r\n  onSubmitClick = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"form\" onSubmit={this.onSubmitClick}>\r\n        <label className=\"label\">\r\n          Name\r\n          <input\r\n            className=\"input-name\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={name}\r\n            onChange={this.onInputChanged}\r\n          />\r\n        </label>\r\n        <label className=\"label\">\r\n          Number\r\n          <input\r\n            className=\"input-name\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={number}\r\n            onChange={this.onInputChanged}\r\n          />\r\n        </label>\r\n        <button className=\"add-button\" type=\"submit\" aria-label=\"add contact\">\r\n          add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\nexport default Form;","import PropTypes from 'prop-types';\r\nconst ContactList = ({ filtered, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"contact-list\">\r\n      {filtered.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDeleteContact(id)}\r\n            className=\"delete-button\"\r\n            type=\"button\"\r\n            aria-label=\"delete\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  filtered: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label className=\"label\">\r\n      Find contacts by name\r\n      <input\r\n        className=\"input-name\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import { Component } from \"react\";\nimport id from \"short-id\";\nimport \"./App.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (text) => {\n    if (this.onCheckContactAlready(text)) {\n      return alert(`${text.name} is already in contacts`);\n    }\n    const contact = { id: id.generate(), ...text };\n    this.setState(({ contacts }) => {\n      return { contacts: [contact, ...contacts] };\n    });\n  };\n  deleteContact = (contactId) => {\n    this.setState(({ contacts }) => {\n      return {\n        contacts: contacts.filter((cont) => cont.id !== contactId),\n      };\n    });\n  };\n\n  onFilterChanged = (e) => {\n    const { value } = e.currentTarget;\n    return this.setState({ filter: value });\n  };\n\n  onCheckContactAlready = (text) => {\n    const { contacts } = this.state;\n    return contacts.some((contact) => contact.name === text.name);\n  };\n  onFilterContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.onFilterChanged} />\n        <ContactList\n          filtered={this.onFilterContacts()}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}